#                                                                            #
# Author(s):                                                                 #
#   Miguel Angel Sagreras                                                    #
#                                                                            #
# Copyright (C) 2015                                                         #
#    Miguel Angel Sagreras                                                   #
#                                                                            #
# This source file may be used and distributed without restriction provided  #
# that this copyright statement is not removed from the file and that any    #
# derivative work contains  the original copyright notice and the associated #
# disclaimer.                                                                #
#                                                                            #
# This source file is free software; you can redistribute it and/or modify   #
# it under the terms of the GNU General Public License as published by the   #
# Free Software Foundation, either version 3 of the License, or (at your     #
# option) any later version.                                                 #
#                                                                            #
# This source is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or      #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for   #
# more details at http://www.gnu.org/licenses/.                              #
#                                                                            #

NET "sys_clk" TNM_NET = sys_clk;
TIMESPEC ts_sys_clk = PERIOD "sys_clk" 10 ns HIGH 50%;

NET "ddr2_dqs_p[0]" TNM_NET = dqs0;
TIMESPEC TS_dso0 = PERIOD "dqs0" 3.33333 ns HIGH 50%; # DDR 300 Mhz rate clock
NET "ddr2_dqs_p[0]" CLOCK_DEDICATED_ROUTE = false;

#NET "ddr2_dqs_p[0]" TNM_NET = dqs0;
#TIMESPEC TS_dso0 = PERIOD "dqs0" 3 ns HIGH 50%; # DDR 333 Mhz rate clock
#NET "ddr2_dqs_p[0]" CLOCK_DEDICATED_ROUTE = false;

NET "ddr2_dqs_p[1]" TNM_NET = dqs1;
TIMESPEC TS_dso1 = PERIOD "dqs1" TS_dso0 HIGH 50% PHASE 0.0; # INPUT_JITTER 200 ps;
NET "ddr2_dqs_p[1]" CLOCK_DEDICATED_ROUTE = false;

NET "phy_rxclk" TNM_NET = phy_rxclk;
TIMESPEC ts_phy_rxclk = PERIOD "phy_rxclk" 8 ns HIGH 50%;
NET "ddrphy_dqsi*"  MAXSKEW  = 0.300 ns;
#NET "ddrphy_dqsi*"  MAXDELAY = 1.000 ns;
NET "ddr_sti*"      MAXSKEW  = 0.250 ns;
#NET "ddr_sti*"      MAXDELAY = 1.000 ns;
NET "ddr2_dqi*"     MAXSKEW  = 0.300 ns;
NET "ddr2_dqi*"     MAXDELAY = 1.000 ns;


# ###################### #
# DDR 300 Mhz rate clock #
# ###################### #

NET "ddr2_dm[0]" OFFSET = IN  1.641 ns VALID 2.917 ns BEFORE ddr2_dqs_p[0] RISING;
NET "ddr2_dm[1]" OFFSET = IN  1.641 ns VALID 2.917 ns BEFORE ddr2_dqs_p[1] RISING;
OFFSET = IN -0.416 ns VALID 0.834 ns BEFORE ddr2_dqs_p[0] RISING;
OFFSET = IN -0.416 ns VALID 0.834 ns BEFORE ddr2_dqs_p[1] RISING;


# ###################### #
# DDR 333 Mhz rate clock #
# ###################### #

#NET "ddr2_dm[0]" OFFSET = IN 1.1375 ns VALID 2.625 ns BEFORE ddr2_dqs_p[0] RISING;
#NET "ddr2_dm[1]" OFFSET = IN 1.1375 ns VALID 2.625 ns BEFORE ddr2_dqs_p[1] RISING;
#OFFSET = IN -0.200 ns VALID 1.100 ns BEFORE ddr2_dqs_p[0] RISING;
#OFFSET = IN -0.200 ns VALID 1.100 ns BEFORE ddr2_dqs_p[1] RISING;

# ###################### #
# Ignore crossclock time #
# ###################### #

NET ddrs_clk0  TNM_NET = FFS  FFS_ddrsclk0;
NET ddrs_clk0  TNM_NET = RAMS RAMS_ddrsclk0;
NET ddrs_clk90 TNM_NET = FFS  FFS_ddrsclk90;
NET ddrs_clk90 TNM_NET = RAMS RAMS_ddrsclk90;
NET input_clk  TNM_NET = FFS  FFS_adcclkab;
NET input_clk  TNM_NET = RAMS RAMS_adcclkab;
NET gtx_clk    TNM_NET = FFS  FFS_gtxclk;
NET gtx_clk    TNM_NET = RAMS RAMS_gtxclk;
#NET video_clk     TNM_NET = FFS  FFS_videoclk;
#NET video_clk     TNM_NET = RAMS RAMS_videoclk;

TIMESPEC TS_r2o_ddr2ddr = FROM RAMS_ddrsclk0 TO FFS_ddrsclk90  TIG;
TIMESPEC TS_f2r_ddr2ddr = FROM FFS_ddrsclk0  TO RAMS_ddrsclk90 TIG;
TIMESPEC TS_f2f_adc2ddr = FROM FFS_adcclkab  TO FFS_ddrsclk0   TIG;
TIMESPEC TS_r2f_adc2ddr = FROM RAMS_adcclkab TO FFS_ddrsclk0   TIG;
TIMESPEC TS_f2f_ddr2adc = FROM FFS_ddrsclk0  TO FFS_adcclkab   TIG;
TIMESPEC TS_f2f_ddr2gtx = FROM FFS_ddrsclk0  TO FFS_gtxclk     TIG;
TIMESPEC TS_f2f_gtx2ddr = FROM FFS_gtxclk    TO FFS_ddrsclk0   TIG;

#TIMESPEC TS_sel = FROM FFS (scope_e/ddr_e/xdr_mpu_sel) TIG;

TIMESPEC TS_dqst0 = TO FFS (ddrphy_e/byte_g[0].ddrdqphy_i/dqso_b.ddrto_i/ffd_i) TIG;
TIMESPEC TS_dqst1 = TO FFS (ddrphy_e/byte_g[1].ddrdqphy_i/dqso_b.ddrto_i/ffd_i) TIG;
TIMESPEC TS_dmt0 = FROM FFS (ddrphy_e/byte_g[0].ddrdqphy_i/t0) TIG;
TIMESPEC TS_dmt1 = FROM FFS (ddrphy_e/byte_g[1].ddrdqphy_i/t0) TIG;

# ######################## #
# Read-FIFO DQS Delay Taps #
# ######################## #

# Data Byte 0 #
# ########### #

INST "ddrphy_e/byte_g[0].dqs_delayed_e/lutp" LOC = SLICE_X1Y44;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[0].ram_i" LOC = SLICE_X0Y43;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[1].ram_i" LOC = SLICE_X0Y43;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[2].ram_i" LOC = SLICE_X0Y44;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[3].ram_i" LOC = SLICE_X0Y44;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[4].ram_i" LOC = SLICE_X0Y43;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[5].ram_i" LOC = SLICE_X0Y43;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[6].ram_i" LOC = SLICE_X0Y44;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[7].ram_i" LOC = SLICE_X0Y44;

INST "ddrphy_e/byte_g[0].dqs_delayed_e/lutn" LOC = SLICE_X1Y44;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[0].ram_i" LOC = SLICE_X0Y42;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[1].ram_i" LOC = SLICE_X0Y42;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[2].ram_i" LOC = SLICE_X0Y45;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[3].ram_i" LOC = SLICE_X0Y45;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[4].ram_i" LOC = SLICE_X0Y42;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[5].ram_i" LOC = SLICE_X0Y42;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[6].ram_i" LOC = SLICE_X0Y45;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[7].ram_i" LOC = SLICE_X0Y45;

#INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[0].inbyte_i/phases_g[0].ar_g.cntr_clk_delay_g.delay_e/lutp"  LOC = SLICE_X2Y48;
#INST "scope_e/ddr_e/rdfifo_i/bytes_g[0].data_phases_g[1].inbyte_i/phases_g[0].ar_g.cntr_clk_delay_g.delay_e/lutp"  LOC = SLICE_X2Y48;

# Data Byte 1 #
# ########### #

INST "ddrphy_e/byte_g[1].dqs_delayed_e/lutp" LOC = SLICE_X1Y30;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[0].ram_i" LOC = SLICE_X0Y29;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[1].ram_i" LOC = SLICE_X0Y29;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[2].ram_i" LOC = SLICE_X0Y31;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[3].ram_i" LOC = SLICE_X0Y31;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[4].ram_i" LOC = SLICE_X0Y29;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[5].ram_i" LOC = SLICE_X0Y29;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[6].ram_i" LOC = SLICE_X0Y31;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ram_b/ram_g[7].ram_i" LOC = SLICE_X0Y31;

INST "ddrphy_e/byte_g[1].dqs_delayed_e/lutn" LOC = SLICE_X1Y30;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[0].ram_i" LOC = SLICE_X0Y28;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[1].ram_i" LOC = SLICE_X0Y28;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[2].ram_i" LOC = SLICE_X0Y32;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[3].ram_i" LOC = SLICE_X0Y32;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[4].ram_i" LOC = SLICE_X0Y28;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[5].ram_i" LOC = SLICE_X0Y28;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[6].ram_i" LOC = SLICE_X0Y32;
INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ram_b/ram_g[7].ram_i" LOC = SLICE_X0Y32;


#INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[0].inbyte_i/phases_g[0].ar_g.cntr_clk_delay_g.delay_e/lutp" LOC = SLICE_X2Y28;
#INST "scope_e/ddr_e/rdfifo_i/bytes_g[1].data_phases_g[1].inbyte_i/phases_g[0].ar_g.cntr_clk_delay_g.delay_e/lutp" LOC = SLICE_X2Y28;

# Others #
# ###### #

NET "ddr2_clk_p[*]" IOSTANDARD = DIFF_SSTL18_II;
NET "ddr2_clk_n[*]" IOSTANDARD = DIFF_SSTL18_II;
NET "ddr2_dqs_p[*]" IOSTANDARD = DIFF_SSTL18_II_DCI;
NET "ddr2_dqs_n[*]" IOSTANDARD = DIFF_SSTL18_II_DCI;
NET "ddr2_d[*]"     IOSTANDARD = SSTL18_II_DCI;
NET "ddr2_dm[*]"    IOSTANDARD = SSTL18_II;
NET "ddr2_we"       IOSTANDARD = SSTL18_II;
NET "ddr2_cas"      IOSTANDARD = SSTL18_II;
NET "ddr2_ras"      IOSTANDARD = SSTL18_II;
NET "ddr2_cs[*]"    IOSTANDARD = SSTL18_II;
NET "ddr2_cke[*]"   IOSTANDARD = SSTL18_II;
NET "ddr2_ba[*]"    IOSTANDARD = SSTL18_II;
NET "ddr2_a[*]"     IOSTANDARD = SSTL18_II;
NET "ddr2_odt[*]"   IOSTANDARD = SSTL18_II;
NET "dvi_gpio1"     IOSTANDARD = SSTL18_II;

#NET "ddr2_scl"       IOSTANDARD = SSTL18_II;
#NET "ddr2_sda"       IOSTANDARD = SSTL18_II;
#NET "gpio_dip_sw[1]" IOSTANDARD = SSTL18_II;

NET "gpio_led[3]" IOSTANDARD = SSTL18_II;
NET "gpio_led[5]" IOSTANDARD = SSTL18_II;
NET "gpio_led[6]" IOSTANDARD = SSTL18_II;
NET "gpio_led[7]" IOSTANDARD = SSTL18_II;

